. 这个概念来源于C/C++语言， 即通过预编译功能， 可以动态定义一些变量， 方便应用中的功能实现。

  例如，国家统计局统计每年的财政收入， 由于每年的收入会细分为各个省市，然后细分为企业， 数据量非常大，所以可能每年的数据为单独一个表(甚至可能每个月的数据是单独一个表)， 这样处理的时候模块中的持久层变量可能就是对应年份或月份的表名。 如果 不用动态的变量名称来构建 类似2015_cash_table 这样的表， 就需要很多个类似模块功能， 这些模块的区别仅仅是一个表名的前缀不同。

. 不过在Java/Groovy 中， 这些功能可以通过 接口来实现。

  即 定义模块功能接口，然后将类似上面的变量作为参数传递给类，

. 通过Java 反射来实现

  下面是一个Hibernage 域类的数据动态存储实现.

  def cl = Class.forName( "smms.reportlist.ReportList_" +datestr + "_tbl").newInstance(tmpmap)
  cl.save()
