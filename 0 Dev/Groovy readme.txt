. 参见:

     http://baike.baidu.com/view/707298.htm

     官网:   http://groovy.codehaus.org/

. Groovy 是一种基于 JVM (Java虚拟机) 的敏捷开发语言, 它结合了Python、Ruby 和 Smalltalk 的许多强大的特性, Groovy 代码能够与Java 代码很好的结合, 也能用于扩展现有代码。 由于其运行在JVM上的特性, Groovy 可以使用其他Java 语言编写的库.

. 简介

      Groovy 是用于Java 虚拟机的一种敏捷的动态语言, 它是一种成熟的面向对象 的编程语言, 既可以用于面向对象编程, 又可以用作纯粹的脚本语言. 使用该种语言不必编写过多的代码, 同时又具有闭包 和 动态语言中的其他特性.

      Groovy 是JVM 的一个替代语言( 替代是指可以用Groovy 在 Java 平台上进行Java 编程), 使用方式基本与Java代码的方式相同, 该语言特别适合与Spring 的动态语言支持一起使用, 设计时充分考虑了Java集成, 这使 Groovy 与 Java 代码的互操作 很容易. （注意: 不是指 Groovy 替代 java, 而是指 Groovy 和 java 很好的结合编程.） 

. 特性

  基本特点:

  1. 构建在强大的java 语言上, 并 添加了从Python， Ruby 和 Smalltalk 等语言中学到的诸多特征, 例如 动态类型转换、闭包和 元编程( metaprogramming ) 支持.

  2. 为 java 开发者提供了 现代最流行的编程语言特性, 而且学习成本很低 (几乎为零 )

  3. 支持  DSL (Domain Specific Languages 领域定义语言 ) 和 其它简洁的语法, 让代码变得易于阅读和维护.

  4. 受检查型异常( Checked Exception ) 也可以不用捕获.

  5. Groovy 拥有 处理原生类型, 面向对象以及 一个 Ant DSL, 使得创建Shell Scripts 变得非常简单.

  6. 在开发 Web, GUI, 数据库 或 控制台程序时, 通过减少框架性代码, 大大提高了开发者的效率;

  7. 支持单远程额是和模拟(对象), 可以简化测试;

  8. 无缝集成 所有已经存在的 Java 对象和类库.

  9. 直接编译成 Java 字节码, 这样可以在任何使用java的地方使用 Groovy

  10. 支持 函数式编程, 不需要main函数.

  11. 一些新的运算符

  12. 默认导入常用的包

  13. 断言 不支持jvm 的 -ea 参数进行开关

  14. 支持对 对象进行布尔求值

  15. 类 不支持 default 作用域, 且 默认作用域为 public

  16. groovy 中 基本类型也是对象, 可以直接调用对象的方法.

  动态类型

      类型对于变量、属性、方法、闭包的参数以及方法的返回类型 都是可有可无的, 都是在给变量赋值的时候才决定它的类型, 不同的类型会在后面用到, 任何类型都可以被使用, 即使 是 基本类型(通过自动包装 (autoboxing))。 当需要时, 很多类型之间的转换都会自动发生, 比如 在这些类型之间的转换: 字符串(String), 基本类型(如 int) 和类型的包装类 (如 Integer )之间, 可以把不同的基本类型添加到同一数组(collections)中.

  闭包

      闭包就是可以使用参数的代码片段, 每个闭包会被编译成继承 groovy.lang.Closure 类的类, 这个类有一个叫call 方法, 通过该方法可以传递参数并调用这个闭包. 他们可以访问并修改在闭包创建的范围内的变量, 在闭包内创建的变量在闭包被调用的范围内同样可以被引用, 闭包可以保存在变量中并作为参数传递到方法中.

. 语法

      Groovy 语法与Java 语言的语法很相似, 虽然 Groovy 的语法源于 Smalltalk 和 Ruby 这类语言的理念, 但是可以将它想象成Java语言的一种更加简单、表达能力更强的变体. (在这点上, Ruby 与 Groovy 不同, 因为它的语法与Java 语法差异很大)。

      许多Java 开发人员喜欢 Groovy 代码和 Java 代码的相似性. 从学习的角度看, 如果知道如何编写Java 代码, 那就已经了解Groovy 了.  Groovy 和Java 语言的主要区别是: 完成同样的任务所需要的Groovy 代码比Java 代码更少.

. 类

      Groovy 类 和Java 类一样, 完全可以用标准java bean 的语法定义一个Groovy 类. 但作为另一种语言, 可以使用 更Groovy 的方式定义类, 这样的好处是, 可以少写一半以上的javabean 代码.

  1. 不需要public 修饰符

                	